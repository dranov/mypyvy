sort node

immutable constant ps: node

mutable relation table(node, node)
mutable relation pending(node, node, node)

init table(N1, N2) <-> N1 = N2
init !pending(PD, S, D)

transition new_packet(pd: node)
  modifies pending
  new(pending(PD, S, D)) <-> pending(PD, S, D) | PD = pd & S = ps & D = ps

transition forward(pd: node, sw0: node, sw1: node)
  modifies pending, table
  pending(pd, sw0, sw1) &
  (forall PD,S,D.
    new(pending(PD,S,D)) <-> pending(PD,S,D) | (PD = pd & S = sw1)) &
  (forall N1,N2.
    new(table(N1,N2)) <->
      table(N1,N2) |
      ps != sw1 &
      (forall W. W != sw1 -> !table(sw1, W)) &
      table(N1, sw1) &
      table(sw0, N2))

safety table(X,X)
safety table(X,Y) & table(Y,Z) -> table(X,Z)
safety table(X,Y) & table(Y,X) -> X = Y
safety table(X,Y) & table(X,Z) -> table(Y,Z) | table(Z,Y)

invariant pending(PD,S,D) & ps != S -> exists W. table(S,W) & W != S
invariant table(X,Y) & ps != Y & X != Y -> exists W. table(Y,W) & W != Y


