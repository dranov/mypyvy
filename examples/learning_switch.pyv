sort node

mutable relation table(node, node, node)
mutable relation pending(node, node, node, node)

init table(T, N1, N2) <-> N1 = N2
init !pending(PS, PD, S, D)

transition new_packet(ps: node, pd: node)
  modifies pending
  new(pending(PS, PD, S, D)) <-> pending(PS, PD, S, D) | PS = ps & PD = pd & S = ps & D = ps

transition forward(ps: node, pd: node, sw0: node, sw1: node, nondet: node)
  modifies pending, table
  pending(ps, pd, sw0, sw1) &
  (forall PS,PD,S,D.
    new(pending(PS,PD,S,D)) <-> pending(PS,PD,S,D) & PS = nondet | (PS = ps & PD = pd & S = sw1)) &
  (forall T,N1,N2.
    new(table(T,N1,N2)) <->
      table(T,N1,N2) |
      T = ps & ps != sw1 &
      (forall W. W != sw1 -> !table(T, sw1, W)) &
      table(T, N1, sw1) &
      table(T, sw0, N2))

safety table(T,X,X)
safety table(T,X,Y) & table(T,Y,Z) -> table(T,X,Z)
safety table(T,X,Y) & table(T,Y,X) -> X = Y
safety table(T,X,Y) & table(T,X,Z) -> table(T,Y,Z) | table(T,Z,Y)

invariant pending(PS,PD,S,D) & PS != S -> table(PS,S,PS)
invariant table(T,X,Y) & T != Y & X != Y -> table(T,Y,T)
# invariant pending(PS,PD,S,D) & PS != S -> exists W. table(PS,S,W) & W != S
# invariant table(T,X,Y) & T != Y & X != Y -> exists W. table(T,Y,W) & W != Y
